<Window x:Class="DoorSimulator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DoorSimulator"
        xmlns:socket="clr-namespace:ETSL.TcpSocket"
        mc:Ignorable="d"
        Title="TILE! Door Simulator (ZL6042)" Height="180" Width="380" 
        Background="LightBlue"
        ResizeMode="CanMinimize" Icon="Resources/TrafficLight.ico" Closing="Window_Closing">
    <Window.Resources>
        <!--Object Definition-->
        <socket:ModbusTcpSocketServer x:Key="tcpSvr"/>
        <socket:ZL6042DISimulator x:Key="zl6042Sim"/>
        <local:DoorSimulatorParams x:Key="simParams"/>        
        <!--Converter-->
        <local:SvrStateToRunSvrEnableConverter x:Key="svrStaToRunSvrEnable"/>
        <local:SvrStateToStopSvrEnableConverter x:Key="svrStaToStopSvrEnable"/>
        <local:SvrStateToFillColorConverter x:Key="svrStaToFillColor"/>
        <local:MsgTransStateToFillColorConverter x:Key="msgTransStaToFillColor"/>
        <local:ExpdrStateToExpdrTextConverter x:Key="expdrStaToExpdrText"/>
        <local:ContraAutoNotifyStaConverter x:Key="contraAutoNotifySta"/>
        <local:ContraDIDetHighToLowConverter x:Key="contraDIDetHighToLow"/>
        <local:ContraDoorClosedStaConverter x:Key="contraDoorClosedSta"/>
        <!--UI Proerty-->
        <LinearGradientBrush x:Key="YellowLED" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="LightYellow" Offset="0"/>
            <GradientStop Color="Yellow" Offset="0.5"/>
            <GradientStop Color="YellowGreen" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="RedLED" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="Pink" Offset="0"/>
            <GradientStop Color="Red" Offset="0.5"/>
            <GradientStop Color="DarkRed" Offset="1"/>
        </LinearGradientBrush> 
        <LinearGradientBrush x:Key="LightGreenLED" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="White" Offset="0"/>
            <GradientStop Color="LightGreen" Offset="0.35"/>
            <GradientStop Color="LimeGreen" Offset="0.85"/>
            <GradientStop Color="Green" Offset="0.9"/>
            <GradientStop Color="DarkGreen" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="DarkGreenLED" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="DarkGreen" Offset="0"/>            
            <GradientStop Color="Green" Offset="0.75"/>
            <GradientStop Color="LimeGreen" Offset="0.85"/>
            <GradientStop Color="LightGreen" Offset="0.9"/>
            <GradientStop Color="white" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="GrayButton" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="LightGray" Offset="0"/>
            <GradientStop Color="Gray" Offset="0.5"/>
            <GradientStop Color="DarkGray" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="RedButton" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="Pink" Offset="0"/>
            <GradientStop Color="Red" Offset="0.5"/>
            <GradientStop Color="DarkRed" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="GreenButton" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="LightGreen" Offset="0"/>
            <GradientStop Color="Green" Offset="0.5"/>
            <GradientStop Color="DarkGreen" Offset="1"/>
        </LinearGradientBrush>
        <!--Style-->
        <Style x:Key="SettingsLabel" TargetType="Label">            
            <Setter Property="Foreground" Value="DarkBlue"/>            
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>        
        <Style x:Key="SettingsTextBox" TargetType="TextBox">            
            <Setter Property="Foreground" Value="Black"/>            
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>        
    </Window.Resources>
    <Window.CommandBindings>
        <!--Standard Pre-defined Commands -->
        <!--<CommandBinding Command="ApplicationCommands.Open" Executed="OpenCommand_Executed"/>-->
        <!--Customed Commands-->
        <CommandBinding Command="local:SimulatorCommands.SimSettingOK"  
                        CanExecute="SimSettingOK_CanExecute" 
                        Executed="SimSettingOK_Executed"/>
    </Window.CommandBindings>
    <DockPanel LastChildFill="True">
        <Expander x:Name="expdr" IsEnabled="true" DockPanel.Dock="Top" Margin="5,2" Collapsed="expdr_Collapsed" Expanded="expdr_Expanded">
            <Expander.Header>
                <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="30*"/>                        
                    </Grid.ColumnDefinitions>
                    <Image Grid.Column="1" Margin="4,0" 
                           Source="Resources/Settings.ico"   
                           VerticalAlignment="Center" HorizontalAlignment="Right" Stretch="None"/>
                    <Label Grid.Column="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" 
                           FontSize="14" Foreground="Blue" x:Name="expdrText"                        
                           Content="Press to show more settings..."/>
                </Grid>
            </Expander.Header>
            <!--<Border BorderBrush="Black" BorderThickness="0.5" Margin="2,4" Padding="0,2,0,2">-->
                <Grid Margin="2,0">
                    <Grid.RowDefinitions>                        
                        <RowDefinition Height="50*"/>
                        <RowDefinition Height="25*"/>
                        <RowDefinition Height="25*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="40*"/>                        
                        <ColumnDefinition Width="30*"/>
                    </Grid.ColumnDefinitions>
                    <GroupBox Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Margin="5,0"
                              HorizontalAlignment="Stretch" HorizontalContentAlignment="Center"
                              Header="ZL6042 DI Report Mode">
                        <StackPanel Orientation="Horizontal" Margin="5"
                                    HorizontalAlignment="Center" VerticalAlignment="Center">
                            <RadioButton Content="Polling/Response" Margin="20,2"
                                         IsChecked="{Binding Source={StaticResource simParams}, Path=IsAutoNotifyMode, Mode=TwoWay, Converter={StaticResource contraAutoNotifySta}}"/>
                            <RadioButton Content="Automatic Notification" Margin="20,2" x:Name="RadioBtnAutoNotify"
                                         IsChecked="{Binding Source={StaticResource simParams}, Path=IsAutoNotifyMode, Mode=TwoWay}"/>
                        </StackPanel>
                    </GroupBox>
                    <Label Grid.Row="1" Grid.Column="0" Content="Timeout (ms)" Style="{StaticResource SettingsLabel}" />
                    <TextBox Grid.Row="1" Grid.Column="1" Margin="0,3,5,3" 
                             Style="{StaticResource SettingsTextBox}" 
                             Text="{Binding Source={StaticResource simParams}, Path=Timeout_ms, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <Label Grid.Row="2" Grid.Column="0" Content="Port Number" Style="{StaticResource SettingsLabel}" />
                    <TextBox Grid.Row="2" Grid.Column="1" Margin="0,3,5,3" Style="{StaticResource SettingsTextBox}"
                             Text="{Binding Source={StaticResource simParams}, Path=PortNum,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <Button Content="OK" Grid.Row="1" Grid.Column="2" Grid.RowSpan="2"   
                            Background="{StaticResource GreenButton}" FontWeight="Bold" VerticalContentAlignment="Center"
                            FontSize="15" Foreground="White" Margin="2,3,5,3" 
                            Command="local:SimulatorCommands.SimSettingOK"/>
            </Grid>
            <!--</Border>-->
        </Expander>        
        <!--<Border Margin="8,4,8,5" BorderBrush="Black" BorderThickness="0.5" >-->
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="70*"/>
                <RowDefinition Height="30*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50*"/>
                <ColumnDefinition Width="50*"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40*"/>
                    <ColumnDefinition Width="40*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <GroupBox Grid.Column="0" Header="Door 1" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="15,0,0,0">
                    <StackPanel Orientation="Vertical" Margin="5,5,5,0" HorizontalAlignment="Center">
                        <RadioButton Content="Open" Margin="0,2" 
                                 IsChecked="{Binding Source={StaticResource simParams}, Path=IsDoor1Closed, Mode=TwoWay, Converter={StaticResource contraDoorClosedSta}}"
                                 Checked="RadioBtnDoor1State_Changed"/>
                        <RadioButton Content="Close" 
                                 IsChecked="{Binding Source={StaticResource simParams}, Path=IsDoor1Closed, Mode=TwoWay}"
                                 Checked="RadioBtnDoor1State_Changed"/>
                    </StackPanel>
                </GroupBox>
                <GroupBox Grid.Column="1" Header="Door 2" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="10,0,5,0">
                    <StackPanel Orientation="Vertical" Margin="5,5,5,0" HorizontalAlignment="Center">
                        <RadioButton Content="Open" Margin="0,2" 
                                 IsChecked="{Binding Source={StaticResource simParams}, Path=IsDoor2Closed, Mode=TwoWay, Converter={StaticResource contraDoorClosedSta}}"
                                 Checked="RadioBtnDoor2State_Changed"/>
                        <RadioButton Content="Close" 
                                 IsChecked="{Binding Source={StaticResource simParams}, Path=IsDoor2Closed, Mode=TwoWay}"
                                 Checked="RadioBtnDoor2State_Changed"/>
                    </StackPanel>
                </GroupBox>
                <GroupBox Grid.Column="2" Header="Open Detection" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="10,0,15,0"
                          IsEnabled="{Binding ElementName=RadioBtnAutoNotify, Path=IsChecked, Mode=OneWay}">
                    <StackPanel Orientation="Vertical" Margin="5,5,5,0" HorizontalAlignment="Center">
                        <RadioButton Content="DI-Low" Margin="0,2" 
                                     IsChecked="{Binding Source={StaticResource simParams}, Path=IsDIDetHighToLow, Mode=TwoWay, Converter={StaticResource contraDIDetHighToLow}}"
                                     Checked="RadioBtnDIDetect_Changed"/>
                        <RadioButton Content="DI-High"
                                     IsChecked="{Binding Source={StaticResource simParams}, Path=IsDIDetHighToLow, Mode=TwoWay}"
                                     Checked="RadioBtnDIDetect_Changed"/>
                    </StackPanel>
                </GroupBox>
            </Grid>           
            <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center">                
                <Button Grid.Row="0" Grid.Column="0" Content="Run" Margin="0,0,0,6" Width="73"
                        VerticalContentAlignment="Center" Foreground="White" 
                        Background="{StaticResource GreenButton}"
                        x:Name="btnRun"
                        IsEnabled="{Binding Source={StaticResource tcpSvr}, Path=ServerState,
                                    Converter={StaticResource svrStaToRunSvrEnable},Mode=OneWay}" 
                        Click="BtnRun_Click"/>
                
                <Button Grid.Row="1" Grid.Column="1" Content="Stop" Margin="8,0,0,6"
                        VerticalContentAlignment="Center" Foreground="White" Width="73"
                        Background="{StaticResource RedButton}"
                        x:Name="btnStop"
                        IsEnabled="{Binding Source={StaticResource tcpSvr}, Path=ServerState,
                                    Converter={StaticResource svrStaToStopSvrEnable},Mode=OneWay}" 
                        Click="BtnStop_Click"/>
            </StackPanel>
            <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Ellipse Width="12" Height="12" 
                         Fill="{Binding Source={StaticResource tcpSvr}, Path=ServerState, Converter={StaticResource svrStaToFillColor}, Mode=OneWay}"/>
                <Label Content="Server" VerticalContentAlignment="Center" FontSize="11"/>
                <Ellipse Width="12" Height="12" Margin="25,0,0,0" 
                         Fill="{Binding Source={StaticResource tcpSvr}, Path=MsgTransState, Converter={StaticResource msgTransStaToFillColor}, Mode=OneWay}"/>
                <Label Content="Message" VerticalContentAlignment="Center" FontSize="11" MouseDoubleClick="Label_MouseDoubleClick"/>
            </StackPanel>
        </Grid>             
        <!--</Border>-->
    </DockPanel>
</Window>
